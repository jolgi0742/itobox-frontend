// src/components/dashboard/WarehouseWidget.tsx - Widget para Dashboard

import React, { useState, useEffect } from 'react';
import { WarehouseService, WHRStats } from '../../services/warehouseService';
import { 
  Package, 
  TrendingUp, 
  CheckCircle, 
  Plane, 
  Ship, 
  ArrowRight,
  DollarSign,
  BarChart3
} from 'lucide-react';

const WarehouseWidget: React.FC = () => {
  const [stats, setStats] = useState<WHRStats | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadStats = async () => {
      try {
        const response = await WarehouseService.getStats();
        if (response.success) {
          setStats(response.data);
        }
      } catch (error) {
        console.error('Error loading warehouse stats:', error);
      } finally {
        setLoading(false);
      }
    };

    loadStats();
  }, []);

  if (loading) {
    return (
      <div className="bg-white rounded-lg shadow-sm p-6 border border-gray-200">
        <div className="animate-pulse">
          <div className="h-4 bg-gray-200 rounded w-3/4 mb-4"></div>
          <div className="space-y-3">
            <div className="h-3 bg-gray-200 rounded"></div>
            <div className="h-3 bg-gray-200 rounded w-5/6"></div>
          </div>
        </div>
      </div>
    );
  }

  if (!stats) {
    return (
      <div className="bg-white rounded-lg shadow-sm p-6 border border-gray-200">
        <div className="text-center text-gray-500">
          <Package className="w-8 h-8 mx-auto mb-2 opacity-50" />
          <p>No se pudieron cargar las estadísticas</p>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-lg shadow-sm p-6 border border-blue-200">
      {/* Header */}
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center gap-3">
          <div className="bg-blue-600 p-2 rounded-lg">
            <Package className="w-5 h-5 text-white" />
          </div>
          <div>
            <h3 className="text-lg font-semibold text-gray-900">WAREHOUSE-USA</h3>
            <p className="text-sm text-gray-600">Gestión de WHRs</p>
          </div>
        </div>
        <button 
          onClick={() => window.location.href = '/warehouse'}
          className="text-blue-600 hover:text-blue-800 text-sm font-medium flex items-center gap-1"
        >
          Ver todo <ArrowRight className="w-4 h-4" />
        </button>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-2 gap-4 mb-6">
        {/* Total WHRs */}
        <div className="bg-white rounded-lg p-4 shadow-sm">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-2xl font-bold text-gray-900">{stats.totalWHRs}</p>
              <p className="text-sm text-gray-600">Total WHRs</p>
            </div>
            <Package className="w-8 h-8 text-blue-600" />
          </div>
        </div>

        {/* Completion Rate */}
        <div className="bg-white rounded-lg p-4 shadow-sm">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-2xl font-bold text-green-600">{stats.warehouseUSA.completionRate}%</p>
              <p className="text-sm text-gray-600">USA Compliance</p>
            </div>
            <CheckCircle className="w-8 h-8 text-green-600" />
          </div>
        </div>

        {/* Classifications */}
        <div className="bg-white rounded-lg p-4 shadow-sm">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-2xl font-bold text-purple-600">{stats.classifiedAWB + stats.classifiedBL}</p>
              <p className="text-sm text-gray-600">Clasificados</p>
              <div className="flex items-center gap-2 mt-1">
                <div className="flex items-center gap-1 text-xs text-gray-500">
                  <Plane className="w-3 h-3" />
                  {stats.classifiedAWB}
                </div>
                <div className="flex items-center gap-1 text-xs text-gray-500">
                  <Ship className="w-3 h-3" />
                  {stats.classifiedBL}
                </div>
              </div>
            </div>
            <BarChart3 className="w-8 h-8 text-purple-600" />
          </div>
        </div>

        {/* Avg Value */}
        <div className="bg-white rounded-lg p-4 shadow-sm">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-2xl font-bold text-indigo-600">${stats.warehouseUSA.avgUnitValue.toFixed(0)}</p>
              <p className="text-sm text-gray-600">Valor Promedio</p>
            </div>
            <DollarSign className="w-8 h-8 text-indigo-600" />
          </div>
        </div>
      </div>

      {/* WAREHOUSE-USA Metrics */}
      <div className="bg-white rounded-lg p-4 shadow-sm">
        <h4 className="font-semibold text-gray-900 mb-3">Campos WAREHOUSE-USA</h4>
        <div className="grid grid-cols-2 gap-3 text-sm">
          <div className="flex justify-between">
            <span className="text-gray-600">Con Invoice:</span>
            <span className="font-medium text-blue-600">{stats.warehouseUSA.withInvoice}/{stats.totalWHRs}</span>
          </div>
          <div className="flex justify-between">
            <span className="text-gray-600">Con PO:</span>
            <span className="font-medium text-green-600">{stats.warehouseUSA.withPO}/{stats.totalWHRs}</span>
          </div>
          <div className="flex justify-between">
            <span className="text-gray-600">Con Carrier:</span>
            <span className="font-medium text-purple-600">{stats.warehouseUSA.withCarrier}/{stats.totalWHRs}</span>
          </div>
          <div className="flex justify-between">
            <span className="text-gray-600">Con Partida:</span>
            <span className="font-medium text-indigo-600">{stats.warehouseUSA.withPartida}/{stats.totalWHRs}</span>
          </div>
        </div>
      </div>

      {/* Recent Activity */}
      {stats.recentWHRs && stats.recentWHRs.length > 0 && (
        <div className="mt-4 bg-white rounded-lg p-4 shadow-sm">
          <h4 className="font-semibold text-gray-900 mb-3">Actividad Reciente</h4>
          <div className="space-y-2">
            {stats.recentWHRs.slice(0, 3).map((whr, index) => (
              <div key={index} className="flex items-center justify-between text-sm">
                <div className="flex items-center gap-2">
                  <div className={`w-2 h-2 rounded-full ${
                    whr.status === 'delivered' ? 'bg-green-500' :
                    whr.status.includes('classified') ? 'bg-purple-500' :
                    'bg-yellow-500'
                  }`}></div>
                  <span className="font-medium text-blue-600">{whr.whrNumber}</span>
                </div>
                <span className="text-gray-500 text-xs">
                  {whr.carrier || 'N/A'}
                </span>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Quick Actions */}
      <div className="mt-4 flex gap-2">
        <button 
          onClick={() => window.location.href = '/warehouse'}
          className="flex-1 bg-blue-600 text-white py-2 px-3 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors"
        >
          Gestionar WHRs
        </button>
        <button 
          onClick={() => window.open('/warehouse-test', '_blank')}
          className="flex-1 bg-gray-600 text-white py-2 px-3 rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors"
        >
          Testing
        </button>
      </div>
    </div>
  );
};

export default WarehouseWidget;